#!/bin/bash

# Define core parameters - rawdata, pipedir, moduledir, assembly_name
# sourcedir="/path/to/rawreads/"
pipedir=$(pwd -P)

moduledir="${pipedir}/modules"
scriptdir="${moduledir}/scripts"
sourcedir="${pipedir}/source_data"

## Make workdir and output directories
outdir="${pipedir}/outdir"
log="${workdir}/log"
singularitydir="${pipedir}/singularities"

# Create Singularity cache directory in /tmp and set environment variables
if [[ ! -d "${singularitydir}" ]]; then
        mkdir -p "${singularitydir}"
fi

if [[ ! -d "${singularitydira}/cache" ]]; then
        mkdir -p "${singularitydir}/cache"
fi

export APTAINERAPTAINER_CACHEDIR=${singularitydir}/cache
export APPTAINER_CACHEDIR=${singularitydir}/cache

#create output directories if not present

if [[ ! -d ${workdir} ]]; then 
	mkdir -p ${workdir}
fi

if [[ ! -d "${outdir}" ]]; then 
	mkdir -p "${outdir}" 
fi

if [[ ! -d "${log}" ]]; then
        mkdir -p "${log}"
fi

# Export core parameters
export sourcedir
export pipedir
export workdir
export outdir
export moduledir
export log
export singularitydir
export scriptdir

# Step 1: Rename and Count
rawdir="${workdir}/raw_data"
if [[ ! -d "${rawdir}" ]]; then 
	mkdir -p "${rawdir}" 
fi
export rawdir

# STEP 2A: fastqc on raw data
qcdir="${workdir}/rawqc" 
if [[ ! -d "${qcdir}" ]]; then 
	mkdir -p "${qcdir}" 
fi
fastqc_module="fastqc/v0.11.9"
module is-avail ${fastqc_module} || { echo "${fastqc_module} not avalible check config.parameters_all file" ; exit 1; }
export fastqc_module
export qcdir

#2B fastp trim
trimdir="${workdir}/trim_files"
if [[ ! -d "${trimdir}" ]]; then
        mkdir -p "${trimdir}"
fi
fastp_module="fastp/v0.20"
module is-avail ${fastp_module} || { echo "${fastp_module} not avalible check config.parameters_all file" ; exit 1; }
export fastp_module
export trimdir

#STEP 2C: qc trim reads
trimqc="${workdir}/trimqc"
if [[ ! -d "${trimqc}" ]]; then
        mkdir -p "${trimqc}"
fi
fastqc_module="fastqc/v0.11.9"
module is-avail ${fastqc_module} || { echo "${fastqc_module} not avalible check config.parameters_all file" ; exit 1; }
export fastqc_module
export trimqc

#STEP 3A 3B: star library index and star mapping
genomedir="${workdir}/genome"
if [[ ! -d "${genomedir}" ]]; then
        mkdir -p "${genomedir}"
fi

stardir="${workdir}/star"
if [[ ! -d "${stardir}" ]]; then
        mkdir -p "${stardir}"
fi

star_module="STAR/2.7.6a"
module is-avail ${star_module} || { echo "${star_module} not avalible check config.parameters_all file" ; exit 1; }
export star_module
export stardir
export genomedir
export len=149

#STEP 4: markdups
markdir="${workdir}/markdups"
if [[ ! -d "${markdir}" ]]; then
        mkdir -p "${markdir}"
fi

picard_module="picard/3.0.0-cnu7rdq"
module is-avail ${picard_module} || { echo "${picard_module} not avalible check config.parameters_all file" ; exit 1; }
samtools_module="samtools/1.19.2-m76oqh7"
module is-avail ${samtools_module} || { echo "${samtools_module} not avalible check config.parameters_all file" ; exit 1; }
export picard_module
export samtools_module
export markdir

#STEP 5: feature count
fcdir="${workdir}/featurecounts"
if [[ ! -d "${fcdir}" ]]; then
        mkdir -p "${fcdir}"
fi

subread_module="subread/2.0.6-abbqxcc"
module is-avail ${subread_module} || { echo "${subread_module} not avalible check config.parameters_all file" ; exit 1; }
export subread_module
export fcdir

#STEP 6: SARTools
rdir="${workdir}/deseq2"
if [[ ! -d "${rdir}" ]]; then
        mkdir -p "${rdir}"
fi

pandoc_dir="${pipedir}/pandoc"
if [[ ! -d "${pandoc_dir}" ]]; then
        mkdir -p "${pandoc_dir}"
fi

curl -LO https://github.com/jgm/pandoc/releases/download/3.6.4/pandoc-3.6.4-linux-amd64.tar.gz -o "${pipedir}/pandoc-3.6.4-linux-amd64.tar.gz"
tar -xvf ${pipedir}/pandoc-3.6.4-linux-amd64.tar.gz --strip-components=1 -C "${pipedir}/pandoc/"

r_module="R/4.4.3"
module is-avail ${r_module} || { echo "${r_module} not avalible check config.parameters_all file" ; exit 1; }
export r_module
export rdir
export R_LIBS=${pipedir}/R_Libs_devel/
export PATH=${PATH}:${pipedir}/pandoc/bin/

# STEP X:
multiqcdir="${workdir}/multiqc"
if [[ ! -d "${multiqcdir}" ]]; then
        mkdir -p "${multiqcdir}"
fi

multiqc_module="multiqc/1.9"
module is-avail ${multiqc_module} || { echo "${multiqc_module} not avalible check config.parameters_all file" ; exit 1; }
export multiqc_module
export multiqcdir


